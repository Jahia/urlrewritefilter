# This workflow is triggered when someone create a new release in GitHub
# and checks the "This is a pre-relase" box.
name: Trigger Release creation

on:
  release:
    types: [ prereleased ]

jobs:
  on-release:
    runs-on: ubuntu-latest
    name: Release module
    steps:
      - uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.GH_SSH_PRIVATE_KEY_JAHIACI }}
      - name: Set environment variables from parameters
        shell: bash
        run: |
          echo "NEXUS_USERNAME=${{ secrets.NEXUS_USERNAME }}" >> $GITHUB_ENV
          echo "NEXUS_PASSWORD=${{ secrets.NEXUS_PASSWORD }}" >> $GITHUB_ENV
      # Setting up the SSH agent to be able to commit back to the repository
      # https://github.com/webfactory/ssh-agent
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.GH_SSH_PRIVATE_KEY_JAHIACI }}
      - name: Delete auto created github tag ${{ github.event.release.tag_name }}
        shell: bash
        run: |
          git config user.email 'jahia-ci@jahia.com'
          git config user.name 'Jahia CI'
          git fetch --all
          git tag --delete ${{ github.event.release.tag_name }}
          git push origin :refs/tags/${{ github.event.release.tag_name }}
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 11
        uses: actions/setup-java@v4.6.0
        with:
          java-version: 11
          distribution: temurin
      - name: Release with Maven
        run: |
          echo "Checkout 'main' branch"
          git checkout main
          TAG_VERSION="${{ github.event.release.tag_name }}" # e.g. urlrewritefilter-3.2.0-jahia123
          FINAL_RELEASE_VERSION="${TAG_VERSION#*-}" # extract 3.2.0-jahia123 from TAG_VERSION
          REVISION=$(echo $FINAL_RELEASE_VERSION  | grep -Eo '[0-9]+$') # extract 123 from 3.2.0-jahia123
          NEXT_REVISION=$(expr $REVISION + 1) # increment the revision by 1
          NEXT_DEVELOPMENT_VERSION="$(echo $FINAL_RELEASE_VERSION | cut -d'-' -f1)-jahia${NEXT_REVISION}"-SNAPSHOT # e.g. 3.2.0-jahia124-SNAPSHOT

          echo "Variables used for the release:"
          echo "- tag version: $TAG_VERSION"
          echo "- final version: $FINAL_RELEASE_VERSION"
          echo "- revision: $REVISION"
          echo "- next revision: $NEXT_REVISION"
          echo "- next dev version: $NEXT_DEVELOPMENT_VERSION"
          [[ -z "$TAG_VERSION" ]] && { echo "Tag is empty" ; exit 0; }
          [[ -z "$FINAL_RELEASE_VERSION" ]] && { echo "final release version is empty" ; exit 0; }
          [[ -z "$REVISION" ]] && { echo "revision is empty" ; exit 0; }
          [[ -z "$NEXT_REVISION" ]] && { echo "next revision is empty" ; exit 0; }
          [[ -z "$NEXT_DEVELOPMENT_VERSION" ]] && { echo "next development version is empty" ; exit 0; }
          echo "Prepare release version $FINAL_RELEASE_VERSION with tag $TAG_VERSION"
          mvn -ntp -B -s .github/maven.settings.xml -DdryRun=false -DskipTests -Dmaven.javadoc.skip=true -Dgpg.skip=true -DskipLocalStaging=true \
          -Dtag=$TAG_VERSION -DreleaseVersion=$FINAL_RELEASE_VERSION -DdevelopmentVersion="$NEXT_DEVELOPMENT_VERSION" -DscmCommentPrefix="[skip ci] [maven-release-plugin] " release:prepare 
          echo "Perform Release version $FINAL_RELEASE_VERSION with tag $TAG_VERSION"
          mvn -ntp -B -s .github/maven.settings.xml -DdryRun=false -DskipTests -Dmaven.javadoc.skip=true -Dgpg.skip=true -DskipLocalStaging=true release:perform